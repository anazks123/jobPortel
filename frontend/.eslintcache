[{"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\index.js":"1","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\App.js":"2","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\store.js":"3","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\utils\\setAuthToken.js":"4","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\auth.js":"5","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Alert.js":"6","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Landing.js":"8","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\auth\\Login.js":"9","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\auth\\Register.js":"10","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\dashboard\\Dashboard.js":"11","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\routing\\PrivateRoute.js":"12","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\CreateApplicantProfile.js":"13","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\CreateRecruiterProfile.js":"14","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\AddEdu.js":"15","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\EditRecruiterProfile.js":"16","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\EditApplicantProfile.js":"17","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\ReviewEdu.js":"18","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\MyProfile.js":"19","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\CreateJob.js":"20","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\ViewJob.js":"21","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\ApplyJob.js":"22","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\EditJob.js":"23","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\MyEmployees.js":"24","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\MyApplications.js":"25","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\alert.js":"26","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\types.js":"27","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\profile.js":"28","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\AllMyJobs.js":"29","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\AllJobs.js":"30","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\rjob.js":"31","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\Applicants.js":"32","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\Edu.js":"33","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\index.js":"34","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\auth.js":"35","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\alert.js":"36","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\profile.js":"37","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\rjob.js":"38"},{"size":146,"mtime":1612162058000,"results":"39","hashOfConfig":"40"},{"size":3642,"mtime":1612162058000,"results":"41","hashOfConfig":"40"},{"size":382,"mtime":1612162058000,"results":"42","hashOfConfig":"40"},{"size":241,"mtime":1612162058000,"results":"43","hashOfConfig":"40"},{"size":2070,"mtime":1612162058000,"results":"44","hashOfConfig":"40"},{"size":483,"mtime":1612162058000,"results":"45","hashOfConfig":"40"},{"size":2360,"mtime":1612162058000,"results":"46","hashOfConfig":"40"},{"size":1120,"mtime":1651302985060,"results":"47","hashOfConfig":"40"},{"size":1889,"mtime":1651302182608,"results":"48","hashOfConfig":"40"},{"size":3681,"mtime":1612162058000,"results":"49","hashOfConfig":"40"},{"size":1473,"mtime":1612162058000,"results":"50","hashOfConfig":"40"},{"size":630,"mtime":1612162058000,"results":"51","hashOfConfig":"40"},{"size":1788,"mtime":1612162058000,"results":"52","hashOfConfig":"40"},{"size":1672,"mtime":1612162058000,"results":"53","hashOfConfig":"40"},{"size":1925,"mtime":1612162058000,"results":"54","hashOfConfig":"40"},{"size":2220,"mtime":1612162058000,"results":"55","hashOfConfig":"40"},{"size":2968,"mtime":1612162058000,"results":"56","hashOfConfig":"40"},{"size":1010,"mtime":1612162058000,"results":"57","hashOfConfig":"40"},{"size":3566,"mtime":1612162058000,"results":"58","hashOfConfig":"40"},{"size":4195,"mtime":1612162058000,"results":"59","hashOfConfig":"40"},{"size":3649,"mtime":1612162058000,"results":"60","hashOfConfig":"40"},{"size":1445,"mtime":1612162058000,"results":"61","hashOfConfig":"40"},{"size":2746,"mtime":1612162058000,"results":"62","hashOfConfig":"40"},{"size":2465,"mtime":1651463830654,"results":"63","hashOfConfig":"40"},{"size":2627,"mtime":1651463505814,"results":"64","hashOfConfig":"40"},{"size":345,"mtime":1612162058000,"results":"65","hashOfConfig":"40"},{"size":964,"mtime":1612162058000,"results":"66","hashOfConfig":"40"},{"size":3247,"mtime":1612162058000,"results":"67","hashOfConfig":"40"},{"size":1985,"mtime":1612162058000,"results":"68","hashOfConfig":"40"},{"size":16642,"mtime":1651462889116,"results":"69","hashOfConfig":"40"},{"size":6490,"mtime":1612162058000,"results":"70","hashOfConfig":"40"},{"size":5880,"mtime":1651463729404,"results":"71","hashOfConfig":"40"},{"size":1082,"mtime":1651464065429,"results":"72","hashOfConfig":"40"},{"size":231,"mtime":1612162058000,"results":"73","hashOfConfig":"40"},{"size":1070,"mtime":1612162058000,"results":"74","hashOfConfig":"40"},{"size":403,"mtime":1612162058000,"results":"75","hashOfConfig":"40"},{"size":801,"mtime":1612162058000,"results":"76","hashOfConfig":"40"},{"size":1753,"mtime":1612162058000,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1la6y6k",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\index.js",[],["161","162"],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\App.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\store.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\auth\\Login.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\auth\\Register.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\dashboard\\Dashboard.js",["163"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AllMyJobs from '../jobs/AllMyJobs';\nimport AllJobs from '../jobs/AllJobs';\nimport { Link } from 'react-router-dom';\n//import { getCurrentProfile } from '../../actions/profile';\n//import { Link } from 'react-router-dom';\n\nconst Dashboard = ({ auth: { user, loading } }) => {\n  return (\n    <Fragment>\n      {loading ? (\n        <Fragment>Loading...</Fragment>\n      ) : (\n        <Fragment>\n          <h1 className='large'>Dashboard</h1>\n          <p className='lead text-dark'>\n            <strong>Welcome {user && user.name}</strong>\n          </p>\n          {user && (\n            <Fragment>\n              {user.jobType === 'JobApplicant' ? (\n                <Fragment>\n                  <AllJobs />\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Link className='btn btn-primary' to='/createjob'>\n                    <i className='fas fa-plus-square'></i> Create Job\n                  </Link>\n                  <br />\n                  <br />\n                  <AllMyJobs />\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(Dashboard);\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\CreateApplicantProfile.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\CreateRecruiterProfile.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\AddEdu.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\EditRecruiterProfile.js",["164"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditRecruiterProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    phonenumber: '',\n    bio: '',\n  });\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      phonenumber: loading || !profile.phonenumber ? '' : profile.phonenumber,\n      bio: loading || !profile.bio ? '' : profile.bio,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const { phonenumber, bio } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true, false);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='x-large'>Edit Profile</h1>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <h1>Phone Number:</h1>\n          <input\n            type='Number'\n            placeholder='Phone Number'\n            name='phonenumber'\n            value={phonenumber}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h1>Bio:</h1>\n          <textarea\n            placeholder='Bio of yourself'\n            name='bio'\n            cols='25'\n            rows='5'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-primary my-1' to='/myprofile'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditRecruiterProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditRecruiterProfile)\n);\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\EditApplicantProfile.js",["165"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n// import Edu from './Edu';\n\nconst EditApplicantProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    phonenumber: '',\n    skills: '',\n  });\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      phonenumber: loading || !profile.phonenumber ? '' : profile.phonenumber,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n    });\n  }, [loading, getCurrentProfile]);\n\n  const { phonenumber, skills } = formData;\n  //console.log(edu);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //console.log(Object.keys(error).length);\n    //console.log('updating');\n    createProfile(formData, history, true, false);\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Fragment>Loading..</Fragment>\n      ) : (\n        <Fragment>\n          <h1 className='x-large'>Edit Profile</h1>\n          <form className='form' onSubmit={(e) => onSubmit(e)}>\n            <div className='form-group'>\n              <h1>Phone Number:</h1>\n              <input\n                type='Number'\n                placeholder='Phonenumber'\n                name='phonenumber'\n                value={phonenumber}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className='form-group'>\n              <h1>Skills:</h1>\n              <input\n                type='text'\n                placeholder='Skills'\n                name='skills'\n                value={skills}\n                onChange={(e) => onChange(e)}\n              />\n              <small className='form-text'>\n                Please use comma separated values (eg.HTML,CSS,JavaScript,PHP)\n              </small>\n            </div>\n            <input type='submit' className='btn btn-primary my-1' />\n          </form>\n          <Link className='btn btn-primary my-1' to='/reviewedu'>\n            Review and delete Education\n          </Link>\n          {'   '}\n          <Link className='btn btn-primary my-1' to='/addedu'>\n            Add Education\n          </Link>{' '}\n          <Link className='btn btn-primary my-1' to='/myprofile'>\n            Go Back\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nEditApplicantProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n})(withRouter(EditApplicantProfile));\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\ReviewEdu.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\MyProfile.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\CreateJob.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\ViewJob.js",["166"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { getJobById, getMyApplicants } from '../../actions/rjob';\nimport Applicants from './Applicants';\n\nconst ViewJob = ({\n  getJobById,\n  getMyApplicants,\n  rjobst: { rjob, loading },\n  match,\n}) => {\n  useEffect(() => {\n    getJobById(match.params.id);\n    getMyApplicants(match.params.id);\n  }, [getJobById, getMyApplicants]);\n  const [disableshow, toggledisableshow] = useState(false);\n  return (\n    <Fragment>\n      {loading || rjob === null ? (\n        <Fragment>Loading...</Fragment>\n      ) : (\n        <Fragment>\n          <Link className='btn btn-primary' to={`/editjob/${rjob._id}`}>\n            <i className='fa fa-pencil-square'></i> Edit Job\n          </Link>\n          <Link className='btn btn-primary' to='/dashboard'>\n            Go Back\n          </Link>\n          <br />\n          <br />\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>Details</th>\n                  <th>Info</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Title</td>\n                  <td>{rjob.title}</td>\n                </tr>\n                <tr>\n                  <td> Type of Job </td>\n                  <td>{rjob.typeofjob}</td>\n                </tr>\n                <tr>\n                  <td> Required Skills</td>\n                  <td>{rjob.requiredskills.join(',')}</td>\n                </tr>\n                <tr>\n                  <td>Date of Posting</td>\n                  <td>\n                    <Moment format='DD/MM/YYYY'>{rjob.dateofposting}</Moment>\n                  </td>\n                </tr>\n                <tr>\n                  <td> No of Applications </td>\n                  <td>{rjob.noofapplications}</td>\n                </tr>\n                <tr>\n                  <td> No of positions </td>\n                  <td>{rjob.noofpositions}</td>\n                </tr>\n                <tr>\n                  <td> Max no of Applications </td>\n                  <td>{rjob.maxapplications}</td>\n                </tr>\n                <tr>\n                  <td>Max no of Positions </td>\n                  <td>{rjob.maxpositions}</td>\n                </tr>\n                <tr>\n                  <td> Duration </td>\n                  <td>{rjob.duration} months</td>\n                </tr>\n                <tr>\n                  <td> Salary </td>\n                  <td>Rs. {rjob.salary} </td>\n                </tr>\n                <tr>\n                  <td> Deadline </td>\n                  <td>{moment(rjob.deadline).format('LLL')}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <br />\n          <div className='my-2'>\n            <button\n              onClick={() => toggledisableshow(!disableshow)}\n              type='button'\n              className='btn btn-primary'\n            >\n              Show Applicants\n            </button>\n          </div>\n          {disableshow && (\n            <Fragment>\n              <Applicants />\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nViewJob.propTypes = {\n  getJobById: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired,\n  getMyApplicants: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  rjobst: state.rjob,\n});\nexport default connect(mapStateToProps, { getJobById, getMyApplicants })(\n  ViewJob\n);\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\ApplyJob.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\EditJob.js",["167"],"import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getJobById, updateJob } from '../../actions/rjob';\nimport moment from 'moment';\n\nconst EditJob = ({\n  updateJob,\n  getJobById,\n  rjobst: { rjob, loading },\n  history,\n  match,\n}) => {\n  const [formData, setFormData] = useState({\n    maxapplications: '',\n    maxpositions: '',\n    deadline: '',\n  });\n\n  useEffect(() => {\n    getJobById(match.params.id);\n    setFormData({\n      maxapplications:\n        loading || !rjob.maxapplications ? '' : rjob.maxapplications,\n      maxpositions: loading || !rjob.maxpositions ? '' : rjob.maxpositions,\n      deadline: loading || !rjob.deadline ? '' : rjob.deadline,\n    });\n  }, [loading, getJobById]);\n  const { maxapplications, maxpositions, deadline } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // (rjob._id);\n    updateJob(formData, history, rjob._id);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <h2>Max no of Applications</h2>\n          <div className='form-group'>\n            <input\n              type='Number'\n              placeholder='* Maximum no of Applications'\n              name='maxapplications'\n              value={maxapplications}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <h2>Max no of Positions</h2>\n          <div className='form-group'>\n            <input\n              type='Number'\n              placeholder='* Maximum no of Positions'\n              name='maxpositions'\n              value={maxpositions}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          <h2>Deadline</h2>\n          <div className='form-group'>\n            <input\n              type='datetime-local'\n              placeholder='* Deadline'\n              name='deadline'\n              value={moment(deadline).format().slice(0, 16)}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-primary' to={`/viewjob/${rjob._id}`}>\n            Go Back\n          </Link>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nEditJob.propTypes = {\n  updateJob: PropTypes.func.isRequired,\n  getJobById: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  rjobst: state.rjob,\n});\nexport default connect(mapStateToProps, {\n  updateJob,\n  getJobById,\n})(withRouter(EditJob));\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\MyEmployees.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\MyApplications.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\alert.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\profile.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\AllMyJobs.js",["168"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { getAllMyJobs, delJobById } from '../../actions/rjob';\n\nconst AllMyJobs = ({\n  getAllMyJobs,\n  delJobById,\n  rjobst: { rjobs, loading },\n}) => {\n  useEffect(() => {\n    getAllMyJobs();\n  }, [getAllMyJobs]);\n\n  const edcus = rjobs\n    .filter((item) => item.maxpositions !== item.noofpositions)\n    .map((edu) => (\n      <tr key={edu._id}>\n        <td>{edu.title}</td>\n        <td>\n          <Moment format='DD/MM/YYYY'>{edu.dateofposting}</Moment>\n        </td>\n        <td>{edu.noofapplications}</td>\n        <td>{edu.maxpositions - edu.noofpositions}</td>\n        <Fragment>\n          <td>\n            <Link to={`/viewjob/${edu._id}`} className='btn btn-primary'>\n              View\n            </Link>{' '}\n            <button\n              onClick={() => delJobById(edu._id)}\n              className='btn btn-danger'\n            >\n              Delete\n            </button>\n          </td>\n        </Fragment>\n      </tr>\n    ));\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Fragment>Loading...</Fragment>\n      ) : (\n        <Fragment>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Date of posting </th>\n                <th>Number of Applicants</th>\n                <th>Remaining Positions</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>{edcus}</tbody>\n          </table>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nAllMyJobs.propTypes = {\n  getAllMyJobs: PropTypes.func.isRequired,\n  delJobById: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  rjobst: state.rjob,\n});\n\nexport default connect(mapStateToProps, { getAllMyJobs, delJobById })(\n  AllMyJobs\n);\n","C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\AllJobs.js",["169","170","171","172","173","174","175","176"],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\actions\\rjob.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\jobs\\Applicants.js",["177","178"],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\components\\profileforms\\Edu.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\alert.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\profile.js",[],"C:\\Users\\Digital\\Desktop\\SBCOllageProjects\\JobPortal-main\\frontend\\src\\reducers\\rjob.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":24,"column":6,"nodeType":"189","endLine":24,"endColumn":34,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":25,"column":6,"nodeType":"189","endLine":25,"endColumn":34,"suggestions":"192"},{"ruleId":"187","severity":1,"message":"193","line":19,"column":6,"nodeType":"189","endLine":19,"endColumn":35,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"195","line":29,"column":6,"nodeType":"189","endLine":29,"endColumn":27,"suggestions":"196"},{"ruleId":"183","severity":1,"message":"197","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":46},{"ruleId":"187","severity":1,"message":"198","line":35,"column":6,"nodeType":"189","endLine":35,"endColumn":65,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":99,"column":11,"nodeType":"202","messageId":"203","endLine":99,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":112,"column":23,"nodeType":"202","messageId":"203","endLine":112,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":119,"column":23,"nodeType":"202","messageId":"203","endLine":119,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":129,"column":25,"nodeType":"202","messageId":"203","endLine":129,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":139,"column":23,"nodeType":"202","messageId":"203","endLine":139,"endColumn":25},{"ruleId":"183","severity":1,"message":"204","line":216,"column":5,"nodeType":"185","messageId":"186","endLine":216,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":233,"column":24,"nodeType":"202","messageId":"203","endLine":233,"endColumn":26},{"ruleId":"187","severity":1,"message":"205","line":24,"column":6,"nodeType":"189","endLine":24,"endColumn":32,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"207","line":30,"column":11,"nodeType":"185","messageId":"186","endLine":30,"endColumn":17},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio' and 'profile.phonenumber'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.phonenumber', you can also switch to useReducer instead of useState and read 'profile.phonenumber' in the reducer.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'profile.phonenumber' and 'profile.skills'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.phonenumber', you can also switch to useReducer instead of useState and read 'profile.phonenumber' in the reducer.",["211"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'match.params.id', 'rjob.deadline', 'rjob.maxapplications', and 'rjob.maxpositions'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'rjob.maxapplications', you can also switch to useReducer instead of useState and read 'rjob.maxapplications' in the reducer.",["213"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'rjobs'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'rjobs', you can also switch to useReducer instead of useState and read 'rjobs' in the reducer.",["214"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'crossing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'applicants' and 'rjob._id'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'applicants', you can also switch to useReducer instead of useState and read 'applicants' in the reducer.",["215"],"'actual' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.phonenumber, profile.bio]",{"range":"228","text":"229"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.phonenumber, profile.skills]",{"range":"230","text":"231"},"Update the dependencies array to be: [getJobById, getMyApplicants, match.params.id]",{"range":"232","text":"233"},"Update the dependencies array to be: [loading, getJobById, match.params.id, rjob.maxapplications, rjob.maxpositions, rjob.deadline]",{"range":"234","text":"235"},"Update the dependencies array to be: [getAllJobs, getMyApplications, getCurrentProfile, loading, rjobs]",{"range":"236","text":"237"},"Update the dependencies array to be: [applicants, getMyApplicants, loading, rjob._id]",{"range":"238","text":"239"},[683,711],"[loading, getCurrentProfile, profile.phonenumber, profile.bio]",[733,761],"[loading, getCurrentProfile, profile.phonenumber, profile.skills]",[542,571],"[getJobById, getMyApplicants, match.params.id]",[817,838],"[loading, getJobById, match.params.id, rjob.maxapplications, rjob.maxpositions, rjob.deadline]",[942,1001],"[getAllJobs, getMyApplications, getCurrentProfile, loading, rjobs]",[692,718],"[applicants, getMyApplicants, loading, rjob._id]"]