{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\JobPortal-main\\\\frontend\\\\src\\\\components\\\\jobs\\\\AllMyJobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { getAllMyJobs, delJobById } from '../../actions/rjob';\n\nconst AllMyJobs = ({\n  getAllMyJobs,\n  delJobById,\n  rjobst: {\n    rjobs,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getAllMyJobs();\n  }, [getAllMyJobs]);\n  const edcus = rjobs.filter(item => item.maxpositions !== item.noofpositions).map(edu => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"DD/MM/YYYY\",\n        children: edu.dateofposting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.noofapplications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.maxpositions - edu.noofpositions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/viewjob/${edu._id}`,\n          className: \"btn btn-primary\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => delJobById(edu._id),\n          className: \"btn btn-danger\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, edu._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of posting \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number of Applicants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining Positions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: edcus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllMyJobs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AllMyJobs;\nAllMyJobs.propTypes = {\n  getAllMyJobs: PropTypes.func.isRequired,\n  delJobById: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  rjobst: state.rjob\n});\n\nexport default connect(mapStateToProps, {\n  getAllMyJobs,\n  delJobById\n})(AllMyJobs);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMyJobs\");","map":{"version":3,"sources":["D:/JobPortal-main/frontend/src/components/jobs/AllMyJobs.js"],"names":["React","Fragment","useEffect","useState","connect","Link","Moment","PropTypes","getAllMyJobs","delJobById","AllMyJobs","rjobst","rjobs","loading","edcus","filter","item","maxpositions","noofpositions","map","edu","title","dateofposting","noofapplications","_id","propTypes","func","isRequired","object","mapStateToProps","state","rjob"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { getAllMyJobs, delJobById } from '../../actions/rjob';\n\nconst AllMyJobs = ({\n  getAllMyJobs,\n  delJobById,\n  rjobst: { rjobs, loading },\n}) => {\n  useEffect(() => {\n    getAllMyJobs();\n  }, [getAllMyJobs]);\n\n  const edcus = rjobs\n    .filter((item) => item.maxpositions !== item.noofpositions)\n    .map((edu) => (\n      <tr key={edu._id}>\n        <td>{edu.title}</td>\n        <td>\n          <Moment format='DD/MM/YYYY'>{edu.dateofposting}</Moment>\n        </td>\n        <td>{edu.noofapplications}</td>\n        <td>{edu.maxpositions - edu.noofpositions}</td>\n        <Fragment>\n          <td>\n            <Link to={`/viewjob/${edu._id}`} className='btn btn-primary'>\n              View\n            </Link>{' '}\n            <button\n              onClick={() => delJobById(edu._id)}\n              className='btn btn-danger'\n            >\n              Delete\n            </button>\n          </td>\n        </Fragment>\n      </tr>\n    ));\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Fragment>Loading...</Fragment>\n      ) : (\n        <Fragment>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Date of posting </th>\n                <th>Number of Applicants</th>\n                <th>Remaining Positions</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>{edcus}</tbody>\n          </table>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nAllMyJobs.propTypes = {\n  getAllMyJobs: PropTypes.func.isRequired,\n  delJobById: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  rjobst: state.rjob,\n});\n\nexport default connect(mapStateToProps, { getAllMyJobs, delJobById })(\n  AllMyJobs\n);\n"]},"metadata":{},"sourceType":"module"}