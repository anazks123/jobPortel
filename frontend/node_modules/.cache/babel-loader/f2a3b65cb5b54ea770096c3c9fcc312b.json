{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\SBCOllageProjects\\\\JobPortal-main\\\\frontend\\\\src\\\\components\\\\jobs\\\\MyApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMyApplications } from '../../actions/rjob';\nimport Moment from 'react-moment';\n\nconst MyApplications = ({\n  getMyApplications,\n  rjobst: {\n    loading,\n    applicants\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getMyApplications();\n  }, [getMyApplications]);\n  const edcus = applicants.map(edu => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"DD/MM/YYYY\",\n        children: edu.dateofjoining\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.recruiter.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.typeofjob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: edu.isjobrated ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: \"Already Rated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : {\n        /* <form>\n         <div className='form-group'>\n           <select\n             type='text'\n             name='jobType'\n             className='dropdown'\n             value={edu.rating}\n             readOnly\n           >\n             <option value='' defaultValue disabled>\n               * choose a Rating\n             </option>\n             <option value='1'>1</option>\n             <option value='2'>2</option>\n             <option value='3'>3</option>\n             <option value='4'>4</option>\n             <option value='5'>5</option>\n           </select>\n         </div>\n        </form> */\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, edu._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: \"/dashboard\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"x-large\",\n        children: \"My Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Joining \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Recruiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type of Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stage of Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: edcus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyApplications, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApplications;\nMyApplications.propTypes = {\n  getMyApplications: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  rjobst: state.rjob\n});\n\nexport default connect(mapStateToProps, {\n  getMyApplications\n})(MyApplications);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApplications\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/SBCOllageProjects/JobPortal-main/frontend/src/components/jobs/MyApplications.js"],"names":["React","Fragment","useEffect","connect","Link","PropTypes","getMyApplications","Moment","MyApplications","rjobst","loading","applicants","edcus","map","edu","title","dateofjoining","salary","recruiter","name","typeofjob","stage","isjobrated","_id","propTypes","func","isRequired","object","mapStateToProps","state","rjob"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMyApplications } from '../../actions/rjob';\nimport Moment from 'react-moment';\n\nconst MyApplications = ({\n  getMyApplications,\n  rjobst: { loading, applicants },\n}) => {\n  useEffect(() => {\n    getMyApplications();\n  }, [getMyApplications]);\n  const edcus = applicants.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.title}</td>\n      <td>\n        <Moment format='DD/MM/YYYY'>{edu.dateofjoining}</Moment>\n      </td>\n      <td>{edu.salary}</td>\n      <td>{edu.recruiter.name}</td>\n      <td>{edu.typeofjob}</td>\n      <td>{edu.stage}</td>\n      <td>\n        {edu.isjobrated ? (\n          <Fragment>Already Rated</Fragment>\n        ) : (\n          \n            {/* <form>\n              <div className='form-group'>\n                <select\n                  type='text'\n                  name='jobType'\n                  className='dropdown'\n                  value={edu.rating}\n                  readOnly\n                >\n                  <option value='' defaultValue disabled>\n                    * choose a Rating\n                  </option>\n                  <option value='1'>1</option>\n                  <option value='2'>2</option>\n                  <option value='3'>3</option>\n                  <option value='4'>4</option>\n                  <option value='5'>5</option>\n                </select>\n              </div>\n            </form> */}\n         \n        )}\n      </td>\n    </tr>\n  ));\n  return (\n    <Fragment>\n      {loading ? (\n        <Fragment>Loading...</Fragment>\n      ) : (\n        <Fragment>\n          <Link className='btn btn-primary' to='/dashboard'>\n            Go Back\n          </Link>\n          <h1 className='x-large'>My Applications</h1>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Date of Joining </th>\n                <th>Salary</th>\n                <th>Recruiter</th>\n                <th>Type of Job</th>\n                <th>Stage of Application</th>\n                {/* <th>Rate</th> */}\n              </tr>\n            </thead>\n            <tbody>{edcus}</tbody>\n          </table>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nMyApplications.propTypes = {\n  getMyApplications: PropTypes.func.isRequired,\n  rjobst: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  rjobst: state.rjob,\n});\n\nexport default connect(mapStateToProps, { getMyApplications })(MyApplications);\n"]},"metadata":{},"sourceType":"module"}