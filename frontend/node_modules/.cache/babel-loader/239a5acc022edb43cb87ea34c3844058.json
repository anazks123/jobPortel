{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILEEDU } from './types';\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get profile by id\n\nexport const getProfileById = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${id}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    const inerror = err.response.data;\n\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //create or update\n\nexport const createProfile = (formData, history, edit = false, create = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit && !create) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    const inerror = err.response.data;\n\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add edu\n\nexport const addEdu = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/edu', formData, config);\n    dispatch({\n      type: UPDATE_PROFILEEDU,\n      payload: res.data\n    });\n    dispatch(setAlert('Education added to profile', 'success'));\n    history.push('/editapplicantprofile');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    const inerror = err.response.data;\n\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n\n    if (errors) {\n      console.log(errors);\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    return errors;\n  }\n}; // delete education\n\nexport const deleteEdu = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/edu/${id}`);\n    dispatch({\n      type: UPDATE_PROFILEEDU,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/JobPortal-main/frontend/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILEEDU","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfileById","id","inerror","createProfile","formData","history","edit","create","config","headers","post","push","errors","forEach","error","addEdu","put","console","log","deleteEdu","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILEEDU } from './types';\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//get profile by id\nexport const getProfileById = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${id}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    const inerror = err.response.data;\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//create or update\nexport const createProfile = (\n  formData,\n  history,\n  edit = false,\n  create = false\n) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.post('api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(edit ? 'profile Updated' : 'Profile Created', 'success'));\n    if (!edit && !create) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    const inerror = err.response.data;\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// add edu\nexport const addEdu = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('api/profile/edu', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILEEDU,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education added to profile', 'success'));\n    history.push('/editapplicantprofile');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    const inerror = err.response.data;\n    if (inerror) {\n      dispatch(setAlert(inerror.msg, 'danger'));\n    }\n    if (errors) {\n      console.log(errors);\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n    return errors;\n  }\n};\n\n// delete education\n\nexport const deleteEdu = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/edu/${id}`);\n    dispatch({\n      type: UPDATE_PROFILEEDU,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}