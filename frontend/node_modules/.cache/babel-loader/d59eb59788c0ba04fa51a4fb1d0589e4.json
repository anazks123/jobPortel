{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\JobPortal-main\\\\frontend\\\\src\\\\components\\\\jobs\\\\ApplyJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { applyJob } from '../../actions/rjob';\n\nconst ApplyJob = ({\n  applyJob,\n  history,\n  match\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    sop: ''\n  });\n  const {\n    sop\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    applyJob(formData, history, match.params.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"* = required field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: e => onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Submit SOP to apply for this job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"* Statement of Purpose\",\n            name: \"sop\",\n            cols: \"25\",\n            rows: \"15\",\n            value: sop,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-primary\",\n          to: \"/dashboard\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApplyJob, \"R2g68qatLhh4qVyWslbCOxmLSzk=\");\n\n_c = ApplyJob;\nApplyJob.propTypes = {\n  applyJob: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  applyJob\n})(withRouter(ApplyJob));\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyJob\");","map":{"version":3,"sources":["D:/JobPortal-main/frontend/src/components/jobs/ApplyJob.js"],"names":["React","Fragment","useState","PropTypes","connect","Link","withRouter","applyJob","ApplyJob","history","match","formData","setFormData","sop","onChange","e","target","name","value","onSubmit","preventDefault","params","id","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAAA;;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,GAAG,EAAE;AADkC,GAAD,CAAxC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAUF,QAAhB;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IACfH,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CADb;;AAEA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAb,IAAAA,QAAQ,CAACI,QAAD,EAAWF,OAAX,EAAoBC,KAAK,CAACW,MAAN,CAAaC,EAAjC,CAAR;AACD,GAHD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAGP,CAAD,IAAOI,QAAQ,CAACJ,CAAD,CAAhD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,WAAW,EAAC,wBADd;AAEE,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,IAAI,EAAC,IAJP;AAKE,YAAA,KAAK,EAAEF,GALT;AAME,YAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAD;AAN3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAcE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAkC,UAAA,EAAE,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAtCD;;GAAMP,Q;;KAAAA,Q;AAwCNA,QAAQ,CAACe,SAAT,GAAqB;AACnBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAO;AAAEG,EAAAA;AAAF,CAAP,CAAP,CAA4BD,UAAU,CAACE,QAAD,CAAtC,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { applyJob } from '../../actions/rjob';\n\nconst ApplyJob = ({ applyJob, history, match }) => {\n  const [formData, setFormData] = useState({\n    sop: '',\n  });\n  const { sop } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    applyJob(formData, history, match.params.id);\n  };\n  return (\n    <Fragment>\n      <div>\n        <small>* = required field</small>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <p className='lead'>Submit SOP to apply for this job</p>\n          <h2>SOP</h2>\n          <div className='form-group'>\n            <textarea\n              placeholder='* Statement of Purpose'\n              name='sop'\n              cols='25'\n              rows='15'\n              value={sop}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n\n          <input type='submit' className='btn btn-primary my-1' />\n          <Link className='btn btn-primary' to='/dashboard'>\n            Go Back\n          </Link>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nApplyJob.propTypes = {\n  applyJob: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { applyJob })(withRouter(ApplyJob));\n"]},"metadata":{},"sourceType":"module"}